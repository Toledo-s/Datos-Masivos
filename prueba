import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Cargar los datos
df = pd.read_excel('ventas-clientes.xlsx')

# Convertir la fecha a días desde una fecha de referencia
df['Fecha compra'] = pd.to_datetime(df['Fecha compra'])
df['Dias desde compra'] = (df['Fecha compra'] - df['Fecha compra'].min()).dt.days

# Seleccionar las variables X y Y
X = df[['Edad', 'Monto compra', 'Dias desde compra']].values
y = df['Grupo de clientes'].values

# Dividir los datos en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear y entrenar el modelo KNN
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)

# Predecir en el conjunto de prueba
y_pred = knn.predict(X_test)

# Evaluar el modelo
accuracy = accuracy_score(y_test, y_pred)
print(f'Precisión del modelo: {accuracy * 100:.2f}%')

# Predecir un nuevo punto
nuevo_punto = np.array([[25, 25000, 100]])  # Edad: 25, Monto compra: 25000, Días desde compra: 100
prediccion = knn.predict(nuevo_punto)
print(f"El cliente es clasificado como: {prediccion[0]}")
